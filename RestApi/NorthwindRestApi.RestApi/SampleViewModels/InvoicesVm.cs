/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 1.12.2018 19:31:13
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using NorthwindRestApi.Business;
using NorthwindRestApi.Business.Interfaces;
using NorthwindRestApi.Business.Repository.Interfaces;

namespace NorthwindRestApi.RestApi.SampleViewModels
{
	public partial class InvoicesVm
	{
		#region member properties
		
		public virtual string ShipName { get; set;}
		
		public virtual string ShipAddress { get; set;}
		
		public virtual string ShipCity { get; set;}
		
		public virtual string ShipRegion { get; set;}
		
		public virtual string ShipPostalCode { get; set;}
		
		public virtual string ShipCountry { get; set;}
		
		public virtual string CustomerID { get; set;}
		
		public virtual string CustomerName { get; set;}
		
		public virtual string Address { get; set;}
		
		public virtual string City { get; set;}
		
		public virtual string Region { get; set;}
		
		public virtual string PostalCode { get; set;}
		
		public virtual string Country { get; set;}
		
		public virtual string Salesperson { get; set;}
		
		public virtual Int32? OrderID { get; set;}
		
		public virtual DateTime? OrderDate { get; set;}
		
		public virtual DateTime? RequiredDate { get; set;}
		
		public virtual DateTime? ShippedDate { get; set;}
		
		public virtual string ShipperName { get; set;}
		
		public virtual Int32? ProductID { get; set;}
		
		public virtual string ProductName { get; set;}
		
		public virtual decimal? UnitPrice { get; set;}
		
		public virtual Int16? Quantity { get; set;}
		
		public virtual float? Discount { get; set;}
		
		public virtual decimal? ExtendedPrice { get; set;}
		
		public virtual decimal? Freight { get; set;}
		#endregion
		
		public InvoicesVm() {}
		
		public InvoicesVm(IBOInvoices boInvoices)
		{
			ShipName = boInvoices.ShipName;
			ShipAddress = boInvoices.ShipAddress;
			ShipCity = boInvoices.ShipCity;
			ShipRegion = boInvoices.ShipRegion;
			ShipPostalCode = boInvoices.ShipPostalCode;
			ShipCountry = boInvoices.ShipCountry;
			CustomerID = boInvoices.CustomerID;
			CustomerName = boInvoices.CustomerName;
			Address = boInvoices.Address;
			City = boInvoices.City;
			Region = boInvoices.Region;
			PostalCode = boInvoices.PostalCode;
			Country = boInvoices.Country;
			Salesperson = boInvoices.Salesperson;
			OrderID = boInvoices.OrderID;
			OrderDate = boInvoices.OrderDate;
			RequiredDate = boInvoices.RequiredDate;
			ShippedDate = boInvoices.ShippedDate;
			ShipperName = boInvoices.ShipperName;
			ProductID = boInvoices.ProductID;
			ProductName = boInvoices.ProductName;
			UnitPrice = boInvoices.UnitPrice;
			Quantity = boInvoices.Quantity;
			Discount = boInvoices.Discount;
			ExtendedPrice = boInvoices.ExtendedPrice;
			Freight = boInvoices.Freight;
		}
		
		public IBOInvoices BOInvoices()
		{
			var boInvoices = new BOInvoices()
			{
				ShipName = this.ShipName,
				ShipAddress = this.ShipAddress,
				ShipCity = this.ShipCity,
				ShipRegion = this.ShipRegion,
				ShipPostalCode = this.ShipPostalCode,
				ShipCountry = this.ShipCountry,
				CustomerID = this.CustomerID,
				CustomerName = this.CustomerName,
				Address = this.Address,
				City = this.City,
				Region = this.Region,
				PostalCode = this.PostalCode,
				Country = this.Country,
				Salesperson = this.Salesperson,
				OrderID = this.OrderID,
				OrderDate = this.OrderDate,
				RequiredDate = this.RequiredDate,
				ShippedDate = this.ShippedDate,
				ShipperName = this.ShipperName,
				ProductID = this.ProductID,
				ProductName = this.ProductName,
				UnitPrice = this.UnitPrice,
				Quantity = this.Quantity,
				Discount = this.Discount,
				ExtendedPrice = this.ExtendedPrice,
				Freight = this.Freight
			};
			return boInvoices;
		}
		
		public IBOInvoices BOInvoices(IInvoicesRepository repo)
		{
			BOInvoices boInvoices = (BOInvoices)BOInvoices();
			boInvoices.Repository = repo;
			return boInvoices;
		}
	}
}
