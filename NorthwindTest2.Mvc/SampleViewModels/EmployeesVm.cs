/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 1.12.2018 16:11:04
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using NorthwindTest2.Business;
using NorthwindTest2.Business.Interfaces;
using NorthwindTest2.Business.Repository.Interfaces;

namespace NorthwindTest2.Mvc.SampleViewModels
{
	public partial class EmployeesVm
	{
		#region member properties
		
		public virtual Int32? EmployeeID { get; set;}
		
		public virtual string LastName { get; set;}
		
		public virtual string FirstName { get; set;}
		
		public virtual string Title { get; set;}
		
		public virtual string TitleOfCourtesy { get; set;}
		
		public virtual DateTime? BirthDate { get; set;}
		
		public virtual DateTime? HireDate { get; set;}
		
		public virtual string Address { get; set;}
		
		public virtual string City { get; set;}
		
		public virtual string Region { get; set;}
		
		public virtual string PostalCode { get; set;}
		
		public virtual string Country { get; set;}
		
		public virtual string HomePhone { get; set;}
		
		public virtual string Extension { get; set;}
		
		public virtual string Photo { get; set;}
		
		public virtual string Notes { get; set;}
		
		public virtual Int32? ReportsTo { get; set;}
		
		public virtual string PhotoPath { get; set;}
		#endregion
		
		public EmployeesVm() {}
		
		public EmployeesVm(IBOEmployees boEmployees)
		{
			EmployeeID = boEmployees.EmployeeID;
			LastName = boEmployees.LastName;
			FirstName = boEmployees.FirstName;
			Title = boEmployees.Title;
			TitleOfCourtesy = boEmployees.TitleOfCourtesy;
			BirthDate = boEmployees.BirthDate;
			HireDate = boEmployees.HireDate;
			Address = boEmployees.Address;
			City = boEmployees.City;
			Region = boEmployees.Region;
			PostalCode = boEmployees.PostalCode;
			Country = boEmployees.Country;
			HomePhone = boEmployees.HomePhone;
			Extension = boEmployees.Extension;
			Photo = boEmployees.Photo != null ? Convert.ToBase64String(boEmployees.Photo) : null;
			Notes = boEmployees.Notes;
			ReportsTo = boEmployees.ReportsTo;
			PhotoPath = boEmployees.PhotoPath;
		}
		
		public IBOEmployees BOEmployees()
		{
			var boEmployees = new BOEmployees()
			{
				EmployeeID = this.EmployeeID,
				LastName = this.LastName,
				FirstName = this.FirstName,
				Title = this.Title,
				TitleOfCourtesy = this.TitleOfCourtesy,
				BirthDate = this.BirthDate,
				HireDate = this.HireDate,
				Address = this.Address,
				City = this.City,
				Region = this.Region,
				PostalCode = this.PostalCode,
				Country = this.Country,
				HomePhone = this.HomePhone,
				Extension = this.Extension,
				Photo = this.Photo != null ? Convert.FromBase64String(this.Photo) : null,
				Notes = this.Notes,
				ReportsTo = this.ReportsTo,
				PhotoPath = this.PhotoPath
			};
			return boEmployees;
		}
		
		public IBOEmployees BOEmployees(IEmployeesRepository repo)
		{
			BOEmployees boEmployees = (BOEmployees)BOEmployees();
			boEmployees.Repository = repo;
			return boEmployees;
		}
	}
}
