/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 1.12.2018 16:11:04
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using NorthwindTest2.Data.Interfaces;
using NorthwindTest2.Business.Repository.Interfaces;

namespace NorthwindTest2.Business.Interfaces
{
	///<Summary>
	///Interface definition
	///This is the interface definition for the class BOCustomers.
	///</Summary>
	public partial interface IBOCustomers 
	{
		#region class methods
		
		///<Summary>
		///SaveNew
		///This method persists a new Customers record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void SaveNew();
		
		///<Summary>
		///Update
		///This method updates one Customers record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOCustomers
		///</parameters>
		void Update();
		
		///<Summary>
		///Delete
		///This method deletes one Customers record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void Delete();
		
		///<Summary>
		///CustomerCustomerDemoCollection
		///This method returns its collection of BOCustomerCustomerDemo objects
		///</Summary>
		///<returns>
		///IList[IBOCustomerCustomerDemo]
		///</returns>
		///<parameters>
		///BOCustomers
		///</parameters>
		IList<IBOCustomerCustomerDemo> CustomerCustomerDemoCollection();
		
		///<Summary>
		///OrdersCollection
		///This method returns its collection of BOOrders objects
		///</Summary>
		///<returns>
		///IList[IBOOrders]
		///</returns>
		///<parameters>
		///BOCustomers
		///</parameters>
		IList<IBOOrders> OrdersCollection();
		
		///<Summary>
		///LoadCustomerCustomerDemoCollection
		///This method loads the internal collection of BOCustomerCustomerDemo objects from storage. 
		///Call this if you need to ensure the collection is up-to-date (concurrency)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void LoadCustomerCustomerDemoCollection();
		
		///<Summary>
		///AddCustomerCustomerDemo
		///This method persists a BOCustomerCustomerDemo object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOCustomerCustomerDemo
		///</parameters>
		void AddCustomerCustomerDemo(IBOCustomerCustomerDemo boCustomerCustomerDemo);
		
		///<Summary>
		///DeleteAllCustomerCustomerDemo
		///This method deletes all BOCustomerCustomerDemo objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void DeleteAllCustomerCustomerDemo();
		
		///<Summary>
		///LoadOrdersCollection
		///This method loads the internal collection of BOOrders objects from storage. 
		///Call this if you need to ensure the collection is up-to-date (concurrency)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void LoadOrdersCollection();
		
		///<Summary>
		///AddOrders
		///This method persists a BOOrders object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOOrders
		///</parameters>
		void AddOrders(IBOOrders boOrders);
		
		///<Summary>
		///DeleteAllOrders
		///This method deletes all BOOrders objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void DeleteAllOrders();
		
		#endregion

		#region member properties
		
		ICustomersRepository CustomersRepository	{	set;}
		
		ICustomerCustomerDemoRepository CustomerCustomerDemoRepository	{	set;}
		
		IOrdersRepository OrdersRepository	{	set;}
		
		string CustomerID	{	get;	set;}
		
		string CompanyName	{	get;	set;}
		
		string ContactName	{	get;	set;}
		
		string ContactTitle	{	get;	set;}
		
		string Address	{	get;	set;}
		
		string City	{	get;	set;}
		
		string Region	{	get;	set;}
		
		string PostalCode	{	get;	set;}
		
		string Country	{	get;	set;}
		
		string Phone	{	get;	set;}
		
		string Fax	{	get;	set;}
		
		Int32? CtrVersion	{	get;	}
		
		bool IsDirty	{	get;	set;}
		
		#endregion
	}
}
