/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 1.12.2018 16:11:04
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using NorthwindTest2.Business;
using NorthwindTest2.Business.Interfaces;
using NorthwindTest2.Business.Repository.Interfaces;

namespace NorthwindTest2.Mvc.SampleViewModels
{
	public partial class OrdersVm
	{
		#region member properties
		
		public virtual Int32? OrderID { get; set;}
		
		public virtual string CustomerID { get; set;}
		
		public virtual Int32? EmployeeID { get; set;}
		
		public virtual DateTime? OrderDate { get; set;}
		
		public virtual DateTime? RequiredDate { get; set;}
		
		public virtual DateTime? ShippedDate { get; set;}
		
		public virtual Int32? ShipVia { get; set;}
		
		public virtual decimal? Freight { get; set;}
		
		public virtual string ShipName { get; set;}
		
		public virtual string ShipAddress { get; set;}
		
		public virtual string ShipCity { get; set;}
		
		public virtual string ShipRegion { get; set;}
		
		public virtual string ShipPostalCode { get; set;}
		
		public virtual string ShipCountry { get; set;}
		#endregion
		
		public OrdersVm() {}
		
		public OrdersVm(IBOOrders boOrders)
		{
			OrderID = boOrders.OrderID;
			CustomerID = boOrders.CustomerID;
			EmployeeID = boOrders.EmployeeID;
			OrderDate = boOrders.OrderDate;
			RequiredDate = boOrders.RequiredDate;
			ShippedDate = boOrders.ShippedDate;
			ShipVia = boOrders.ShipVia;
			Freight = boOrders.Freight;
			ShipName = boOrders.ShipName;
			ShipAddress = boOrders.ShipAddress;
			ShipCity = boOrders.ShipCity;
			ShipRegion = boOrders.ShipRegion;
			ShipPostalCode = boOrders.ShipPostalCode;
			ShipCountry = boOrders.ShipCountry;
		}
		
		public IBOOrders BOOrders()
		{
			var boOrders = new BOOrders()
			{
				OrderID = this.OrderID,
				CustomerID = this.CustomerID,
				EmployeeID = this.EmployeeID,
				OrderDate = this.OrderDate,
				RequiredDate = this.RequiredDate,
				ShippedDate = this.ShippedDate,
				ShipVia = this.ShipVia,
				Freight = this.Freight,
				ShipName = this.ShipName,
				ShipAddress = this.ShipAddress,
				ShipCity = this.ShipCity,
				ShipRegion = this.ShipRegion,
				ShipPostalCode = this.ShipPostalCode,
				ShipCountry = this.ShipCountry
			};
			return boOrders;
		}
		
		public IBOOrders BOOrders(IOrdersRepository repo)
		{
			BOOrders boOrders = (BOOrders)BOOrders();
			boOrders.Repository = repo;
			return boOrders;
		}
	}
}
