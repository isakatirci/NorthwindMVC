/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 1.12.2018 19:31:13
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using NorthwindRestApi.Business;
using NorthwindRestApi.Business.Interfaces;
using NorthwindRestApi.Business.Repository.Interfaces;

namespace NorthwindRestApi.RestApi.SampleViewModels
{
	public partial class IdentityUserVm
	{
		#region member properties
		
		public virtual Int32? UserId { get; set;}
		
		public virtual string Email { get; set;}
		
		public virtual bool? EmailConfirmed { get; set;}
		
		public virtual string PasswordHash { get; set;}
		
		public virtual string SecurityStamp { get; set;}
		
		public virtual string PhoneNumber { get; set;}
		
		public virtual bool? PhoneNumberConfirmed { get; set;}
		
		public virtual bool? TwoFactorEnabled { get; set;}
		
		public virtual DateTime? LockoutEndDateUtc { get; set;}
		
		public virtual bool? LockoutEnabled { get; set;}
		
		public virtual Int32? AccessFailedCount { get; set;}
		
		public virtual string Username { get; set;}
		#endregion
		
		public IdentityUserVm() {}
		
		public IdentityUserVm(IBOIdentityUser boIdentityUser)
		{
			UserId = boIdentityUser.UserId;
			Email = boIdentityUser.Email;
			EmailConfirmed = boIdentityUser.EmailConfirmed;
			PasswordHash = boIdentityUser.PasswordHash;
			SecurityStamp = boIdentityUser.SecurityStamp;
			PhoneNumber = boIdentityUser.PhoneNumber;
			PhoneNumberConfirmed = boIdentityUser.PhoneNumberConfirmed;
			TwoFactorEnabled = boIdentityUser.TwoFactorEnabled;
			LockoutEndDateUtc = boIdentityUser.LockoutEndDateUtc;
			LockoutEnabled = boIdentityUser.LockoutEnabled;
			AccessFailedCount = boIdentityUser.AccessFailedCount;
			Username = boIdentityUser.Username;
		}
		
		public IBOIdentityUser BOIdentityUser()
		{
			var boIdentityUser = new BOIdentityUser()
			{
				UserId = this.UserId,
				Email = this.Email,
				EmailConfirmed = this.EmailConfirmed,
				PasswordHash = this.PasswordHash,
				SecurityStamp = this.SecurityStamp,
				PhoneNumber = this.PhoneNumber,
				PhoneNumberConfirmed = this.PhoneNumberConfirmed,
				TwoFactorEnabled = this.TwoFactorEnabled,
				LockoutEndDateUtc = this.LockoutEndDateUtc,
				LockoutEnabled = this.LockoutEnabled,
				AccessFailedCount = this.AccessFailedCount,
				Username = this.Username
			};
			return boIdentityUser;
		}
		
		public IBOIdentityUser BOIdentityUser(IIdentityUserRepository repo)
		{
			BOIdentityUser boIdentityUser = (BOIdentityUser)BOIdentityUser();
			boIdentityUser.Repository = repo;
			return boIdentityUser;
		}
	}
}
