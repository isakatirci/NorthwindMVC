/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 2.12.2018 01:22:23
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using Northwind.Data.Interfaces;
using Northwind.Business.Repository.Interfaces;

namespace Northwind.Business.Interfaces
{
	///<Summary>
	///Interface definition
	///This is the interface definition for the class BOProducts.
	///</Summary>
	public partial interface IBOProducts 
	{
		#region class methods
		
		///<Summary>
		///SaveNew
		///This method persists a new Products record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void SaveNew();
		
		///<Summary>
		///Update
		///This method updates one Products record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOProducts
		///</parameters>
		void Update();
		
		///<Summary>
		///Delete
		///This method deletes one Products record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void Delete();
		
		///<Summary>
		///İnventoryTransactionsCollection
		///This method returns its collection of BOİnventoryTransactions objects
		///</Summary>
		///<returns>
		///IList[IBOİnventoryTransactions]
		///</returns>
		///<parameters>
		///BOProducts
		///</parameters>
		IList<IBOİnventoryTransactions> İnventoryTransactionsCollection();
		
		///<Summary>
		///OrderDetailsCollection
		///This method returns its collection of BOOrderDetails objects
		///</Summary>
		///<returns>
		///IList[IBOOrderDetails]
		///</returns>
		///<parameters>
		///BOProducts
		///</parameters>
		IList<IBOOrderDetails> OrderDetailsCollection();
		
		///<Summary>
		///PurchaseOrderDetailsCollection
		///This method returns its collection of BOPurchaseOrderDetails objects
		///</Summary>
		///<returns>
		///IList[IBOPurchaseOrderDetails]
		///</returns>
		///<parameters>
		///BOProducts
		///</parameters>
		IList<IBOPurchaseOrderDetails> PurchaseOrderDetailsCollection();
		
		///<Summary>
		///LoadİnventoryTransactionsCollection
		///This method loads the internal collection of BOİnventoryTransactions objects from storage. 
		///Call this if you need to ensure the collection is up-to-date (concurrency)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void LoadİnventoryTransactionsCollection();
		
		///<Summary>
		///AddİnventoryTransactions
		///This method persists a BOİnventoryTransactions object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOİnventoryTransactions
		///</parameters>
		void AddİnventoryTransactions(IBOİnventoryTransactions boİnventoryTransactions);
		
		///<Summary>
		///DeleteAllİnventoryTransactions
		///This method deletes all BOİnventoryTransactions objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void DeleteAllİnventoryTransactions();
		
		///<Summary>
		///LoadOrderDetailsCollection
		///This method loads the internal collection of BOOrderDetails objects from storage. 
		///Call this if you need to ensure the collection is up-to-date (concurrency)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void LoadOrderDetailsCollection();
		
		///<Summary>
		///AddOrderDetails
		///This method persists a BOOrderDetails object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOOrderDetails
		///</parameters>
		void AddOrderDetails(IBOOrderDetails boOrderDetails);
		
		///<Summary>
		///DeleteAllOrderDetails
		///This method deletes all BOOrderDetails objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void DeleteAllOrderDetails();
		
		///<Summary>
		///LoadPurchaseOrderDetailsCollection
		///This method loads the internal collection of BOPurchaseOrderDetails objects from storage. 
		///Call this if you need to ensure the collection is up-to-date (concurrency)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void LoadPurchaseOrderDetailsCollection();
		
		///<Summary>
		///AddPurchaseOrderDetails
		///This method persists a BOPurchaseOrderDetails object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOPurchaseOrderDetails
		///</parameters>
		void AddPurchaseOrderDetails(IBOPurchaseOrderDetails boPurchaseOrderDetails);
		
		///<Summary>
		///DeleteAllPurchaseOrderDetails
		///This method deletes all BOPurchaseOrderDetails objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void DeleteAllPurchaseOrderDetails();
		
		#endregion

		#region member properties
		
		IProductsRepository ProductsRepository	{	set;}
		
		IInventoryTransactionsRepository İnventoryTransactionsRepository	{	set;}
		
		IOrderDetailsRepository OrderDetailsRepository	{	set;}
		
		IPurchaseOrderDetailsRepository PurchaseOrderDetailsRepository	{	set;}
		
		string Supplierİds	{	get;	set;}
		
		string İd	{	get;	set;}
		
		string ProductCode	{	get;	set;}
		
		string ProductName	{	get;	set;}
		
		string Description	{	get;	set;}
		
		string StandardCost	{	get;	set;}
		
		string ListPrice	{	get;	set;}
		
		string ReorderLevel	{	get;	set;}
		
		string TargetLevel	{	get;	set;}
		
		string QuantityPerUnit	{	get;	set;}
		
		string Discontinued	{	get;	set;}
		
		string MinimumReorderQuantity	{	get;	set;}
		
		string Category	{	get;	set;}
		
		byte[] Attachments	{	get;	set;}
		
		string CtrVersion	{	get;	}
		
		bool IsDirty	{	get;	set;}
		
		#endregion
	}
}
