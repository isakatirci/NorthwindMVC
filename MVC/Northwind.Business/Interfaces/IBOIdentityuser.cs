/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 2.12.2018 01:22:23
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using Northwind.Data.Interfaces;
using Northwind.Business.Repository.Interfaces;

namespace Northwind.Business.Interfaces
{
	///<Summary>
	///Interface definition
	///This is the interface definition for the class BOIdentityuser.
	///</Summary>
	public partial interface IBOIdentityuser 
	{
		#region class methods
		
		///<Summary>
		///SaveNew
		///This method persists a new Identityuser record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void SaveNew();
		
		///<Summary>
		///Update
		///This method updates one Identityuser record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOIdentityuser
		///</parameters>
		void Update();
		
		///<Summary>
		///Delete
		///This method deletes one Identityuser record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void Delete();
		
		///<Summary>
		///IdentityuserclaimCollection
		///This method returns its collection of BOIdentityuserclaim objects
		///</Summary>
		///<returns>
		///IList[IBOIdentityuserclaim]
		///</returns>
		///<parameters>
		///BOIdentityuser
		///</parameters>
		IList<IBOIdentityuserclaim> IdentityuserclaimCollection();
		
		///<Summary>
		///IdentityuserroleCollection
		///This method returns its collection of BOIdentityuserrole objects
		///</Summary>
		///<returns>
		///IList[IBOIdentityuserrole]
		///</returns>
		///<parameters>
		///BOIdentityuser
		///</parameters>
		IList<IBOIdentityuserrole> IdentityuserroleCollection();
		
		///<Summary>
		///LoadIdentityuserclaimCollection
		///This method loads the internal collection of BOIdentityuserclaim objects from storage. 
		///Call this if you need to ensure the collection is up-to-date (concurrency)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void LoadIdentityuserclaimCollection();
		
		///<Summary>
		///AddIdentityuserclaim
		///This method persists a BOIdentityuserclaim object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOIdentityuserclaim
		///</parameters>
		void AddIdentityuserclaim(IBOIdentityuserclaim boIdentityuserclaim);
		
		///<Summary>
		///DeleteAllIdentityuserclaim
		///This method deletes all BOIdentityuserclaim objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void DeleteAllIdentityuserclaim();
		
		///<Summary>
		///LoadIdentityuserroleCollection
		///This method loads the internal collection of BOIdentityuserrole objects from storage. 
		///Call this if you need to ensure the collection is up-to-date (concurrency)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void LoadIdentityuserroleCollection();
		
		///<Summary>
		///AddIdentityuserrole
		///This method persists a BOIdentityuserrole object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOIdentityuserrole
		///</parameters>
		void AddIdentityuserrole(IBOIdentityuserrole boIdentityuserrole);
		
		///<Summary>
		///DeleteAllIdentityuserrole
		///This method deletes all BOIdentityuserrole objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void DeleteAllIdentityuserrole();
		
		#endregion

		#region member properties
		
		IIdentityuserRepository IdentityuserRepository	{	set;}
		
		IIdentityuserclaimRepository IdentityuserclaimRepository	{	set;}
		
		IIdentityuserroleRepository IdentityuserroleRepository	{	set;}
		
		string UserId	{	get;	set;}
		
		string Email	{	get;	set;}
		
		bool EmailConfirmed	{	get;	set;}
		
		string PasswordHash	{	get;	set;}
		
		string SecurityStamp	{	get;	set;}
		
		string PhoneNumber	{	get;	set;}

		bool PhoneNumberConfirmed	{	get;	set;}

		bool TwoFactorEnabled	{	get;	set;}

		DateTime LockoutEndDateUtc	{	get;	set;}

        bool LockoutEnabled	{	get;	set;}

		int AccessFailedCount	{	get;	set;}
		
		string Username	{	get;	set;}
		
		string CtrVersion	{	get;	}
		
		bool IsDirty	{	get;	set;}
		
		#endregion
	}
}
