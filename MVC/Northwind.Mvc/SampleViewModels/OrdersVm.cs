/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 2.12.2018 01:22:24
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using Northwind.Business;
using Northwind.Business.Interfaces;
using Northwind.Business.Repository.Interfaces;

namespace Northwind.Mvc.SampleViewModels
{
	public partial class OrdersVm
	{
		#region member properties
		
		public virtual string İd { get; set;}
		
		public virtual string Employeeİd { get; set;}
		
		public virtual string Customerİd { get; set;}
		
		public virtual string OrderDate { get; set;}
		
		public virtual string ShippedDate { get; set;}
		
		public virtual string Shipperİd { get; set;}
		
		public virtual string ShipName { get; set;}
		
		public virtual string ShipAddress { get; set;}
		
		public virtual string ShipCity { get; set;}
		
		public virtual string ShipStateProvince { get; set;}
		
		public virtual string ShipZipPostalCode { get; set;}
		
		public virtual string ShipCountryRegion { get; set;}
		
		public virtual string ShippingFee { get; set;}
		
		public virtual string Taxes { get; set;}
		
		public virtual string PaymentType { get; set;}
		
		public virtual string PaidDate { get; set;}
		
		public virtual string Notes { get; set;}
		
		public virtual double? TaxRate { get; set;}
		
		public virtual string TaxStatusİd { get; set;}
		
		public virtual string Statusİd { get; set;}
		#endregion
		
		public OrdersVm() {}
		
		public OrdersVm(IBOOrders boOrders)
		{
			İd = boOrders.İd;
			Employeeİd = boOrders.Employeeİd;
			Customerİd = boOrders.Customerİd;
			OrderDate = boOrders.OrderDate;
			ShippedDate = boOrders.ShippedDate;
			Shipperİd = boOrders.Shipperİd;
			ShipName = boOrders.ShipName;
			ShipAddress = boOrders.ShipAddress;
			ShipCity = boOrders.ShipCity;
			ShipStateProvince = boOrders.ShipStateProvince;
			ShipZipPostalCode = boOrders.ShipZipPostalCode;
			ShipCountryRegion = boOrders.ShipCountryRegion;
			ShippingFee = boOrders.ShippingFee;
			Taxes = boOrders.Taxes;
			PaymentType = boOrders.PaymentType;
			PaidDate = boOrders.PaidDate;
			Notes = boOrders.Notes;
			TaxRate = boOrders.TaxRate;
			TaxStatusİd = boOrders.TaxStatusİd;
			Statusİd = boOrders.Statusİd;
		}
		
		public IBOOrders BOOrders()
		{
			var boOrders = new BOOrders()
			{
				İd = this.İd,
				Employeeİd = this.Employeeİd,
				Customerİd = this.Customerİd,
				OrderDate = this.OrderDate,
				ShippedDate = this.ShippedDate,
				Shipperİd = this.Shipperİd,
				ShipName = this.ShipName,
				ShipAddress = this.ShipAddress,
				ShipCity = this.ShipCity,
				ShipStateProvince = this.ShipStateProvince,
				ShipZipPostalCode = this.ShipZipPostalCode,
				ShipCountryRegion = this.ShipCountryRegion,
				ShippingFee = this.ShippingFee,
				Taxes = this.Taxes,
				PaymentType = this.PaymentType,
				PaidDate = this.PaidDate,
				Notes = this.Notes,
				TaxRate = this.TaxRate,
				TaxStatusİd = this.TaxStatusİd,
				Statusİd = this.Statusİd
			};
			return boOrders;
		}
		
		public IBOOrders BOOrders(IOrdersRepository repo)
		{
			BOOrders boOrders = (BOOrders)BOOrders();
			boOrders.Repository = repo;
			return boOrders;
		}
	}
}
