/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 2.12.2018 01:22:24
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using Northwind.Business;
using Northwind.Business.Interfaces;
using Northwind.Business.Repository.Interfaces;

namespace Northwind.Mvc.SampleViewModels
{
	public partial class PurchaseOrdersVm
	{
		#region member properties
		
		public virtual string İd { get; set;}
		
		public virtual string Supplierİd { get; set;}
		
		public virtual string CreatedBy { get; set;}
		
		public virtual string SubmittedDate { get; set;}
		
		public virtual string CreationDate { get; set;}
		
		public virtual string Statusİd { get; set;}
		
		public virtual string ExpectedDate { get; set;}
		
		public virtual string ShippingFee { get; set;}
		
		public virtual string Taxes { get; set;}
		
		public virtual string PaymentDate { get; set;}
		
		public virtual string PaymentAmount { get; set;}
		
		public virtual string PaymentMethod { get; set;}
		
		public virtual string Notes { get; set;}
		
		public virtual string ApprovedBy { get; set;}
		
		public virtual string ApprovedDate { get; set;}
		
		public virtual string SubmittedBy { get; set;}
		#endregion
		
		public PurchaseOrdersVm() {}
		
		public PurchaseOrdersVm(IBOPurchaseOrders boPurchaseOrders)
		{
			İd = boPurchaseOrders.İd;
			Supplierİd = boPurchaseOrders.Supplierİd;
			CreatedBy = boPurchaseOrders.CreatedBy;
			SubmittedDate = boPurchaseOrders.SubmittedDate;
			CreationDate = boPurchaseOrders.CreationDate;
			Statusİd = boPurchaseOrders.Statusİd;
			ExpectedDate = boPurchaseOrders.ExpectedDate;
			ShippingFee = boPurchaseOrders.ShippingFee;
			Taxes = boPurchaseOrders.Taxes;
			PaymentDate = boPurchaseOrders.PaymentDate;
			PaymentAmount = boPurchaseOrders.PaymentAmount;
			PaymentMethod = boPurchaseOrders.PaymentMethod;
			Notes = boPurchaseOrders.Notes;
			ApprovedBy = boPurchaseOrders.ApprovedBy;
			ApprovedDate = boPurchaseOrders.ApprovedDate;
			SubmittedBy = boPurchaseOrders.SubmittedBy;
		}
		
		public IBOPurchaseOrders BOPurchaseOrders()
		{
			var boPurchaseOrders = new BOPurchaseOrders()
			{
				İd = this.İd,
				Supplierİd = this.Supplierİd,
				CreatedBy = this.CreatedBy,
				SubmittedDate = this.SubmittedDate,
				CreationDate = this.CreationDate,
				Statusİd = this.Statusİd,
				ExpectedDate = this.ExpectedDate,
				ShippingFee = this.ShippingFee,
				Taxes = this.Taxes,
				PaymentDate = this.PaymentDate,
				PaymentAmount = this.PaymentAmount,
				PaymentMethod = this.PaymentMethod,
				Notes = this.Notes,
				ApprovedBy = this.ApprovedBy,
				ApprovedDate = this.ApprovedDate,
				SubmittedBy = this.SubmittedBy
			};
			return boPurchaseOrders;
		}
		
		public IBOPurchaseOrders BOPurchaseOrders(IPurchaseOrdersRepository repo)
		{
			BOPurchaseOrders boPurchaseOrders = (BOPurchaseOrders)BOPurchaseOrders();
			boPurchaseOrders.Repository = repo;
			return boPurchaseOrders;
		}
	}
}
