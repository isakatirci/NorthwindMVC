/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 2.12.2018 01:21:41
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Linq;
using System.Collections.Generic;
using Northwind.Data;
using Northwind.Data.Interfaces;
using Northwind.Business.Repository.Interfaces;

namespace Northwind.Business.Repository
{
	public partial class RF
	{
		private IzNorthwindConn_TxConnectionProvider _connectionProvider;
		private IList<object> _repositories;
		
		public static RF New()
		{
			return new RF();
		}
		
		private RF()
		{
			_connectionProvider = new zNorthwindConn_TxConnectionProvider();
			_repositories = new List<object>();
		}
	}

	public partial class RF
	{
		public IIdentityroleRepository IdentityroleRepository
		{
			get
			{
				IIdentityroleRepository repo = (IIdentityroleRepository)_repositories.SingleOrDefault((x) => x is IIdentityroleRepository);
				if(repo == null)
				{
					repo = new IdentityroleRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IIdentityuserRepository IdentityuserRepository
		{
			get
			{
				IIdentityuserRepository repo = (IIdentityuserRepository)_repositories.SingleOrDefault((x) => x is IIdentityuserRepository);
				if(repo == null)
				{
					repo = new IdentityuserRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IIdentityuserclaimRepository IdentityuserclaimRepository
		{
			get
			{
				IIdentityuserclaimRepository repo = (IIdentityuserclaimRepository)_repositories.SingleOrDefault((x) => x is IIdentityuserclaimRepository);
				if(repo == null)
				{
					repo = new IdentityuserclaimRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IIdentityuserloginRepository IdentityuserloginRepository
		{
			get
			{
				IIdentityuserloginRepository repo = (IIdentityuserloginRepository)_repositories.SingleOrDefault((x) => x is IIdentityuserloginRepository);
				if(repo == null)
				{
					repo = new IdentityuserloginRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IIdentityuserprofileRepository IdentityuserprofileRepository
		{
			get
			{
				IIdentityuserprofileRepository repo = (IIdentityuserprofileRepository)_repositories.SingleOrDefault((x) => x is IIdentityuserprofileRepository);
				if(repo == null)
				{
					repo = new IdentityuserprofileRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IIdentityuserroleRepository IdentityuserroleRepository
		{
			get
			{
				IIdentityuserroleRepository repo = (IIdentityuserroleRepository)_repositories.SingleOrDefault((x) => x is IIdentityuserroleRepository);
				if(repo == null)
				{
					repo = new IdentityuserroleRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public ICustomersRepository CustomersRepository
		{
			get
			{
				ICustomersRepository repo = (ICustomersRepository)_repositories.SingleOrDefault((x) => x is ICustomersRepository);
				if(repo == null)
				{
					repo = new CustomersRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IEmployeePrivilegesRepository EmployeePrivilegesRepository
		{
			get
			{
				IEmployeePrivilegesRepository repo = (IEmployeePrivilegesRepository)_repositories.SingleOrDefault((x) => x is IEmployeePrivilegesRepository);
				if(repo == null)
				{
					repo = new EmployeePrivilegesRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IEmployeesRepository EmployeesRepository
		{
			get
			{
				IEmployeesRepository repo = (IEmployeesRepository)_repositories.SingleOrDefault((x) => x is IEmployeesRepository);
				if(repo == null)
				{
					repo = new EmployeesRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IInventoryTransactionTypesRepository İnventoryTransactionTypesRepository
		{
			get
			{
				IInventoryTransactionTypesRepository repo = (IInventoryTransactionTypesRepository)_repositories.SingleOrDefault((x) => x is IInventoryTransactionTypesRepository);
				if(repo == null)
				{
					repo = new InventoryTransactionTypesRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IInventoryTransactionsRepository İnventoryTransactionsRepository
		{
			get
			{
				IInventoryTransactionsRepository repo = (IInventoryTransactionsRepository)_repositories.SingleOrDefault((x) => x is IInventoryTransactionsRepository);
				if(repo == null)
				{
					repo = new InventoryTransactionsRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IInvoicesRepository İnvoicesRepository
		{
			get
			{
				IInvoicesRepository repo = (IInvoicesRepository)_repositories.SingleOrDefault((x) => x is IInvoicesRepository);
				if(repo == null)
				{
					repo = new InvoicesRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IOrderDetailsRepository OrderDetailsRepository
		{
			get
			{
				IOrderDetailsRepository repo = (IOrderDetailsRepository)_repositories.SingleOrDefault((x) => x is IOrderDetailsRepository);
				if(repo == null)
				{
					repo = new OrderDetailsRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IOrderDetailsStatusRepository OrderDetailsStatusRepository
		{
			get
			{
				IOrderDetailsStatusRepository repo = (IOrderDetailsStatusRepository)_repositories.SingleOrDefault((x) => x is IOrderDetailsStatusRepository);
				if(repo == null)
				{
					repo = new OrderDetailsStatusRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IOrdersRepository OrdersRepository
		{
			get
			{
				IOrdersRepository repo = (IOrdersRepository)_repositories.SingleOrDefault((x) => x is IOrdersRepository);
				if(repo == null)
				{
					repo = new OrdersRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IOrdersStatusRepository OrdersStatusRepository
		{
			get
			{
				IOrdersStatusRepository repo = (IOrdersStatusRepository)_repositories.SingleOrDefault((x) => x is IOrdersStatusRepository);
				if(repo == null)
				{
					repo = new OrdersStatusRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IOrdersTaxStatusRepository OrdersTaxStatusRepository
		{
			get
			{
				IOrdersTaxStatusRepository repo = (IOrdersTaxStatusRepository)_repositories.SingleOrDefault((x) => x is IOrdersTaxStatusRepository);
				if(repo == null)
				{
					repo = new OrdersTaxStatusRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IPrivilegesRepository PrivilegesRepository
		{
			get
			{
				IPrivilegesRepository repo = (IPrivilegesRepository)_repositories.SingleOrDefault((x) => x is IPrivilegesRepository);
				if(repo == null)
				{
					repo = new PrivilegesRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IProductsRepository ProductsRepository
		{
			get
			{
				IProductsRepository repo = (IProductsRepository)_repositories.SingleOrDefault((x) => x is IProductsRepository);
				if(repo == null)
				{
					repo = new ProductsRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IPurchaseOrderDetailsRepository PurchaseOrderDetailsRepository
		{
			get
			{
				IPurchaseOrderDetailsRepository repo = (IPurchaseOrderDetailsRepository)_repositories.SingleOrDefault((x) => x is IPurchaseOrderDetailsRepository);
				if(repo == null)
				{
					repo = new PurchaseOrderDetailsRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IPurchaseOrderStatusRepository PurchaseOrderStatusRepository
		{
			get
			{
				IPurchaseOrderStatusRepository repo = (IPurchaseOrderStatusRepository)_repositories.SingleOrDefault((x) => x is IPurchaseOrderStatusRepository);
				if(repo == null)
				{
					repo = new PurchaseOrderStatusRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IPurchaseOrdersRepository PurchaseOrdersRepository
		{
			get
			{
				IPurchaseOrdersRepository repo = (IPurchaseOrdersRepository)_repositories.SingleOrDefault((x) => x is IPurchaseOrdersRepository);
				if(repo == null)
				{
					repo = new PurchaseOrdersRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public ISalesReportsRepository SalesReportsRepository
		{
			get
			{
				ISalesReportsRepository repo = (ISalesReportsRepository)_repositories.SingleOrDefault((x) => x is ISalesReportsRepository);
				if(repo == null)
				{
					repo = new SalesReportsRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IShippersRepository ShippersRepository
		{
			get
			{
				IShippersRepository repo = (IShippersRepository)_repositories.SingleOrDefault((x) => x is IShippersRepository);
				if(repo == null)
				{
					repo = new ShippersRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public IStringsRepository StringsRepository
		{
			get
			{
				IStringsRepository repo = (IStringsRepository)_repositories.SingleOrDefault((x) => x is IStringsRepository);
				if(repo == null)
				{
					repo = new StringsRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		

	public partial class RF
	{
		public ISuppliersRepository SuppliersRepository
		{
			get
			{
				ISuppliersRepository repo = (ISuppliersRepository)_repositories.SingleOrDefault((x) => x is ISuppliersRepository);
				if(repo == null)
				{
					repo = new SuppliersRepository();
					repo.ConnectionProvider = _connectionProvider;
					_repositories.Add(repo);
				}
				return repo;
			}
		}
	}
		
}
