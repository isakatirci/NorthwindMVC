/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 2.12.2018 12:15:59
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using NorthwindClassLibrary.DataObjects.Interfaces;
using NorthwindClassLibrary.BusinessObjects.Repository.Interfaces;

namespace NorthwindClassLibrary.BusinessObjects.Interfaces
{
	///<Summary>
	///Interface definition
	///This is the interface definition for the class BOProducts.
	///</Summary>
	public partial interface IBOProducts 
	{
		#region class methods
		
		///<Summary>
		///SaveNew
		///This method persists a new Products record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void SaveNew();
		
		///<Summary>
		///Update
		///This method updates one Products record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOProducts
		///</parameters>
		void Update();
		
		///<Summary>
		///Delete
		///This method deletes one Products record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void Delete();
		
		///<Summary>
		///InventoryTransactionsCollection
		///This method returns its collection of BOInventoryTransactions objects
		///</Summary>
		///<returns>
		///IList[IBOInventoryTransactions]
		///</returns>
		///<parameters>
		///BOProducts
		///</parameters>
		IList<IBOInventoryTransactions> InventoryTransactionsCollection();
		
		///<Summary>
		///OrderDetailsCollection
		///This method returns its collection of BOOrderDetails objects
		///</Summary>
		///<returns>
		///IList[IBOOrderDetails]
		///</returns>
		///<parameters>
		///BOProducts
		///</parameters>
		IList<IBOOrderDetails> OrderDetailsCollection();
		
		///<Summary>
		///LoadInventoryTransactionsCollection
		///This method loads the internal collection of BOInventoryTransactions objects from storage. 
		///Call this if you need to ensure the collection is up-to-date (concurrency)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void LoadInventoryTransactionsCollection();
		
		///<Summary>
		///AddInventoryTransactions
		///This method persists a BOInventoryTransactions object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOInventoryTransactions
		///</parameters>
		void AddInventoryTransactions(IBOInventoryTransactions boInventoryTransactions);
		
		///<Summary>
		///DeleteAllInventoryTransactions
		///This method deletes all BOInventoryTransactions objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void DeleteAllInventoryTransactions();
		
		///<Summary>
		///LoadOrderDetailsCollection
		///This method loads the internal collection of BOOrderDetails objects from storage. 
		///Call this if you need to ensure the collection is up-to-date (concurrency)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void LoadOrderDetailsCollection();
		
		///<Summary>
		///AddOrderDetails
		///This method persists a BOOrderDetails object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOOrderDetails
		///</parameters>
		void AddOrderDetails(IBOOrderDetails boOrderDetails);
		
		///<Summary>
		///DeleteAllOrderDetails
		///This method deletes all BOOrderDetails objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void DeleteAllOrderDetails();
		
		#endregion

		#region member properties
		
		IProductsRepository ProductsRepository	{	set;}
		
		IInventoryTransactionsRepository InventoryTransactionsRepository	{	set;}
		
		IOrderDetailsRepository OrderDetailsRepository	{	set;}
		
		string SupplierIds	{	get;	set;}
		
		string Id	{	get;	set;}
		
		string ProductCode	{	get;	set;}
		
		string ProductName	{	get;	set;}
		
		string Description	{	get;	set;}
		
		string StandardCost	{	get;	set;}
		
		string ListPrice	{	get;	set;}
		
		string ReorderLevel	{	get;	set;}
		
		string TargetLevel	{	get;	set;}
		
		string QuantityPerUnit	{	get;	set;}
		
		string Discontinued	{	get;	set;}
		
		string MinimumReorderQuantity	{	get;	set;}
		
		string Category	{	get;	set;}
		
		byte[] Attachments	{	get;	set;}
		
		string CtrVersion	{	get;	}
		
		bool IsDirty	{	get;	set;}
		
		#endregion
	}
}
