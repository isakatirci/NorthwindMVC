/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 1.12.2018 19:31:12
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using NorthwindRestApi.Data.Interfaces;
using NorthwindRestApi.Business.Repository.Interfaces;

namespace NorthwindRestApi.Business.Interfaces
{
	///<Summary>
	///Interface definition
	///This is the interface definition for the class BOIdentityUser.
	///</Summary>
	public partial interface IBOIdentityUser 
	{
		#region class methods
		
		///<Summary>
		///SaveNew
		///This method persists a new IdentityUser record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void SaveNew();
		
		///<Summary>
		///Update
		///This method updates one IdentityUser record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOIdentityUser
		///</parameters>
		void Update();
		
		///<Summary>
		///Delete
		///This method deletes one IdentityUser record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void Delete();
		
		///<Summary>
		///IdentityUserClaimCollection
		///This method returns its collection of BOIdentityUserClaim objects
		///</Summary>
		///<returns>
		///IList[IBOIdentityUserClaim]
		///</returns>
		///<parameters>
		///BOIdentityUser
		///</parameters>
		IList<IBOIdentityUserClaim> IdentityUserClaimCollection();
		
		///<Summary>
		///IdentityUserLoginCollection
		///This method returns its collection of BOIdentityUserLogin objects
		///</Summary>
		///<returns>
		///IList[IBOIdentityUserLogin]
		///</returns>
		///<parameters>
		///BOIdentityUser
		///</parameters>
		IList<IBOIdentityUserLogin> IdentityUserLoginCollection();
		
		///<Summary>
		///IdentityUserProfileCollection
		///This method returns its collection of BOIdentityUserProfile objects
		///</Summary>
		///<returns>
		///IList[IBOIdentityUserProfile]
		///</returns>
		///<parameters>
		///BOIdentityUser
		///</parameters>
		IList<IBOIdentityUserProfile> IdentityUserProfileCollection();
		
		///<Summary>
		///IdentityUserRoleCollection
		///This method returns its collection of BOIdentityUserRole objects
		///</Summary>
		///<returns>
		///IList[IBOIdentityUserRole]
		///</returns>
		///<parameters>
		///BOIdentityUser
		///</parameters>
		IList<IBOIdentityUserRole> IdentityUserRoleCollection();
		
		///<Summary>
		///LoadIdentityUserClaimCollection
		///This method loads the internal collection of BOIdentityUserClaim objects from storage. 
		///Call this if you need to ensure the collection is up-to-date (concurrency)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void LoadIdentityUserClaimCollection();
		
		///<Summary>
		///AddIdentityUserClaim
		///This method persists a BOIdentityUserClaim object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOIdentityUserClaim
		///</parameters>
		void AddIdentityUserClaim(IBOIdentityUserClaim boIdentityUserClaim);
		
		///<Summary>
		///DeleteAllIdentityUserClaim
		///This method deletes all BOIdentityUserClaim objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void DeleteAllIdentityUserClaim();
		
		///<Summary>
		///LoadIdentityUserLoginCollection
		///This method loads the internal collection of BOIdentityUserLogin objects from storage. 
		///Call this if you need to ensure the collection is up-to-date (concurrency)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void LoadIdentityUserLoginCollection();
		
		///<Summary>
		///AddIdentityUserLogin
		///This method persists a BOIdentityUserLogin object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOIdentityUserLogin
		///</parameters>
		void AddIdentityUserLogin(IBOIdentityUserLogin boIdentityUserLogin);
		
		///<Summary>
		///DeleteAllIdentityUserLogin
		///This method deletes all BOIdentityUserLogin objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void DeleteAllIdentityUserLogin();
		
		///<Summary>
		///LoadIdentityUserProfileCollection
		///This method loads the internal collection of BOIdentityUserProfile objects from storage. 
		///Call this if you need to ensure the collection is up-to-date (concurrency)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void LoadIdentityUserProfileCollection();
		
		///<Summary>
		///AddIdentityUserProfile
		///This method persists a BOIdentityUserProfile object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOIdentityUserProfile
		///</parameters>
		void AddIdentityUserProfile(IBOIdentityUserProfile boIdentityUserProfile);
		
		///<Summary>
		///DeleteAllIdentityUserProfile
		///This method deletes all BOIdentityUserProfile objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void DeleteAllIdentityUserProfile();
		
		///<Summary>
		///LoadIdentityUserRoleCollection
		///This method loads the internal collection of BOIdentityUserRole objects from storage. 
		///Call this if you need to ensure the collection is up-to-date (concurrency)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void LoadIdentityUserRoleCollection();
		
		///<Summary>
		///AddIdentityUserRole
		///This method persists a BOIdentityUserRole object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOIdentityUserRole
		///</parameters>
		void AddIdentityUserRole(IBOIdentityUserRole boIdentityUserRole);
		
		///<Summary>
		///DeleteAllIdentityUserRole
		///This method deletes all BOIdentityUserRole objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		void DeleteAllIdentityUserRole();
		
		#endregion

		#region member properties
		
		IIdentityUserRepository IdentityUserRepository	{	set;}
		
		IIdentityUserClaimRepository IdentityUserClaimRepository	{	set;}
		
		IIdentityUserLoginRepository IdentityUserLoginRepository	{	set;}
		
		IIdentityUserProfileRepository IdentityUserProfileRepository	{	set;}
		
		IIdentityUserRoleRepository IdentityUserRoleRepository	{	set;}
		
		Int32? UserId	{	get;	set;}
		
		string Email	{	get;	set;}
		
		bool? EmailConfirmed	{	get;	set;}
		
		string PasswordHash	{	get;	set;}
		
		string SecurityStamp	{	get;	set;}
		
		string PhoneNumber	{	get;	set;}
		
		bool? PhoneNumberConfirmed	{	get;	set;}
		
		bool? TwoFactorEnabled	{	get;	set;}
		
		DateTime? LockoutEndDateUtc	{	get;	set;}
		
		bool? LockoutEnabled	{	get;	set;}
		
		Int32? AccessFailedCount	{	get;	set;}
		
		string Username	{	get;	set;}
		
		Int32? CtrVersion	{	get;	}
		
		bool IsDirty	{	get;	set;}
		
		#endregion
	}
}
